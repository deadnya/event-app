version: '3.8'

services:
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - hitstask_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - hits-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ACCESS_EXPIRATION_MS: ${JWT_ACCESS_EXPIRATION_MS}
      JWT_REFRESH_EXPIRATION_MS: ${JWT_REFRESH_EXPIRATION_MS}
      JWT_EXPIRED_TOKENS_CLEANUP_MS: ${JWT_EXPIRED_TOKENS_CLEANUP_MS}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      SERVER_PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - hits-network
    volumes:
      - ./backend/logs:/app/logs

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL}
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - hits-network

  telegram-bot:
    build:
      context: ./telegram
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      API_BASE_URL: ${API_BASE_URL}
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
    depends_on:
      - db
      - backend
    networks:
      - hits-network
    volumes:
      - ./telegram/logs:/app/logs

volumes:
  hitstask_data:

networks:
  hits-network:
    driver: bridge
